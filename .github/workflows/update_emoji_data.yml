name: Update and Release Emoji Data

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间 0 点运行
  workflow_dispatch:     # 手动触发

jobs:
  update-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install requests

      - name: Run update script with retry
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: python data/update_emoji_data.py

      - name: Validate generated JSON
        run: |
          python -c "import json; json.load(open('data/emojimix_data.json'))"

      - name: Check if there are changes
        id: check_changes
        run: |
          git add data/emojimix_data.json data/metadata_hash.txt
          git diff --cached --exit-code || echo "has_changes=true" >> $GITHUB_ENV

      - name: Commit and push changes
        if: env.has_changes == 'true'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "Update emoji data and hash"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current date
        id: date
        run: echo "release_date=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: env.has_changes == 'true'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.release_date }}"  # 使用当天日期作为版本号
          name: "Release v${{ env.release_date }}"
          files: data/emojimix_data.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Emoji data update failed',
              body: 'The emoji data update workflow failed. Please check the logs.'
            })
