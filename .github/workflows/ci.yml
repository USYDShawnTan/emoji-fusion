name: CI - Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  # 代码质量检查
  quality-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm exec tsc --noEmit

      - name: Lint
        run: pnpm lint

      - name: Build check
        run: pnpm build

      - name: Push build artifacts to build branch
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          # 配置 git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # 创建或切换到 build 分支
          git fetch origin build:build 2>/dev/null || git checkout -b build
          git checkout build
          
          # 清理 build 分支，只保留构建产物
          git rm -rf . 2>/dev/null || true
          
          # 复制构建产物
          git checkout main -- .next/ public/ package.json pnpm-lock.yaml Dockerfile data/ 2>/dev/null || true
          
          # 添加构建信息
          echo "Build from commit: ${{ github.sha }}" > BUILD_INFO.txt
          echo "Build time: $(date)" >> BUILD_INFO.txt
          echo "Branch: ${{ github.ref_name }}" >> BUILD_INFO.txt
          
          # 提交构建产物
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Build artifacts from ${{ github.sha }}"
            git push origin build
            echo "✅ Build artifacts pushed to build branch"
          fi

  # 测试 (如果有的话)
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: |
          if [ -f "jest.config.js" ] || [ -f "jest.config.ts" ]; then
            pnpm test
          else
            echo "No test configuration found, skipping tests"
          fi
